<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tony Wang]]></title>
  <link href="http://hutaow.github.io/atom.xml" rel="self"/>
  <link href="http://hutaow.github.io/"/>
  <updated>2008-02-11T16:29:57+08:00</updated>
  <id>http://hutaow.github.io/</id>
  <author>
    <name><![CDATA[Wang Tao]]></name>
    <email><![CDATA[hutaow (at) hotmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TP-WR703n安装OpenWRT记录]]></title>
    <link href="http://hutaow.github.io/blog/2013/09/06/install-openwrt/"/>
    <updated>2013-09-06T23:16:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2013/09/06/install-openwrt</id>
    <content type="html"><![CDATA[<h3>1 安装OpenWRT</h3>

<h4>1.1 下载并刷新固件</h4>

<p>如果以前没刷过OpenWRT，需要升级factory固件，<a href="http://downloads.openwrt.org/snapshots/trunk/ar71xx/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin" title="openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin">点击这里下载</a>。</p>

<p>如果之前已经安装过了OpenWRT，则直接更新sysupgrade固件即可，<a href="http://downloads.openwrt.org/snapshots/trunk/ar71xx/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-sysupgrade.bin" title="openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-sysupgrade.bin">点击这里下载</a>。</p>

<p>注意升级的时候要将原配置删除，避免配置文件互相影响，固件刷新完成后，路由器会自动重启。</p>

<h4>1.2 登陆路由器</h4>

<p>OpenWRT主线固件的无线信号是默认关闭的，这个时候需要找跟网线将电脑和路由器连接上，然后将电脑的IP地址设置为静态的&#8221;192.168.1.100&#8221;，然后用Telnet访问&#8221;192.168.1.1&#8221;，正确的情况下，会看到如下界面：
<img class="center" src="http://hutaow.github.io/images/articles/201309/install_openwrt_01_first_login.png" title="First Login" ></p>

<h4>1.3 打开无线信号</h4>

<p>编辑&#8221;/etc/config/wireless&#8221;文件，将&#8221;option disabled 1&#8221;这一行注掉，或者直接删除。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config wifi-device radio0
</span><span class='line'>    option type     mac80211
</span><span class='line'>    option channel  11
</span><span class='line'>    option hwmode   11ng
</span><span class='line'>    option path     'platform/ar933x_wmac'
</span><span class='line'>    option htmode   HT20
</span><span class='line'>    list ht_capab   SHORT-GI-20
</span><span class='line'>    list ht_capab   SHORT-GI-40
</span><span class='line'>    list ht_capab   RX-STBC1
</span><span class='line'>    list ht_capab   DSSS_CCK-40
</span><span class='line'>    # REMOVE THIS LINE TO ENABLE WIFI:
</span><span class='line'>    # option disabled 1
</span><span class='line'>
</span><span class='line'>config wifi-iface
</span><span class='line'>    option device   radio0
</span><span class='line'>    option network  lan
</span><span class='line'>    option mode     ap
</span><span class='line'>    option ssid     OpenWrt
</span><span class='line'>    option encryption none</span></code></pre></td></tr></table></div></figure>


<h4>1.4 外网接入配置</h4>

<p>编辑&#8221;/etc/config/network&#8221;文件，将原&#8221;lan&#8221;区段中的&#8221;ifname&#8221;注掉，新增&#8221;wan&#8221;段，如果是用宽带拨号上网，则配置成下面的样子（其中USERNAME和PASSWORD分别是拨号的用户名和密码）：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config interface 'loopback'
</span><span class='line'>  option ifname 'lo'
</span><span class='line'>  option proto 'static'
</span><span class='line'>  option ipaddr '127.0.0.1'
</span><span class='line'>  option netmask '255.0.0.0'
</span><span class='line'>
</span><span class='line'>config globals 'globals'
</span><span class='line'>  option ula_prefix 'fd4f:26fb:9d78::/48'
</span><span class='line'>
</span><span class='line'>config interface 'lan'
</span><span class='line'>  # option ifname 'eth0'
</span><span class='line'>  option type 'bridge'
</span><span class='line'>  option proto 'static'
</span><span class='line'>  option ipaddr '192.168.1.1'
</span><span class='line'>  option netmask '255.255.255.0'
</span><span class='line'>  option ip6assign '60'
</span><span class='line'>
</span><span class='line'>config interface 'wan'
</span><span class='line'>  option ifname 'eth0'
</span><span class='line'>  option proto 'pppoe'
</span><span class='line'>  option username 'USERNAME'
</span><span class='line'>  option password 'PASSWORD'</span></code></pre></td></tr></table></div></figure>


<p>如果不需要拨号，直接通过其它路由器连接，则将&#8221;wan&#8221;区段配置成下面的样子：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config interface 'wan'
</span><span class='line'>  option ifname 'eth0'
</span><span class='line'>  option proto 'dhcp'</span></code></pre></td></tr></table></div></figure>


<h4>1.5 重启路由器，完成OpenWRT的安装</h4>

<p>执行reboot命令重启路由器，将外网线连上，重启后搜索无线信号，就可以看到&#8221;OpenWRT&#8221;的信号了，连接上去，不出意外的话，这个时候电脑已经可以上网了。</p>

<h3>2 将OpenWRT扩展至U盘</h3>

<h4>2.1 安装基本软件</h4>

<p>再次用Telnet访问&#8221;192.168.1.1&#8221;，执行下面的命令，将挂载U盘相关的基本软件安装上。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>opkg update
</span><span class='line'>opkg install block-mount kmod-fs-ext4 kmod-usb-ohci kmod-usb-storage e2fsprogs</span></code></pre></td></tr></table></div></figure>


<h4>2.2 准备挂载U盘</h4>

<p>将U盘插上，执行&#8221;block info&#8221;命令，看下U盘是否已被识别，如下图，其中中sda1、sda2、sda5为U盘分区：
<img class="center" src="http://hutaow.github.io/images/articles/201309/install_openwrt_02_block_info.png" title="Block Info" ></p>

<h4>2.3 拷贝系统文件</h4>

<p>执行如下命令，将路由器ROM中的系统文件全部拷贝到U盘中：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mount /dev/sda1 /mnt 
</span><span class='line'>mkdir /tmp/vroot 
</span><span class='line'>mount --bind / /tmp/vroot 
</span><span class='line'>cp -a /tmp/vroot/* /mnt 
</span><span class='line'>sync 
</span><span class='line'>umount /tmp/vroot</span></code></pre></td></tr></table></div></figure>


<h4>2.4 设置交换空间（可选）</h4>

<p>U盘在分区时可以预留一个交换分区，防止路由器内存不足，这里预留的交换分区是sda5，执行下面的命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>swapon /dev/sda5</span></code></pre></td></tr></table></div></figure>


<h4>2.5 保存挂载信息</h4>

<p>将当前挂载状态写入fstab文件中：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>block detect &gt; /etc/config/fstab</span></code></pre></td></tr></table></div></figure>


<p>然后修改&#8221;/etc/config/fstab&#8221;文件，将sda1的挂载点设置为&#8221;/&ldquo;，并将&#8221;option enabled&#8221;置1，配置类似下面的样子：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config global
</span><span class='line'>  option anon_swap '0'
</span><span class='line'>  option anon_mount '0'
</span><span class='line'>  option auto_swap '1'
</span><span class='line'>  option auto_mount '1'
</span><span class='line'>  option delay_root '5'
</span><span class='line'>  option check_fs '0'
</span><span class='line'>
</span><span class='line'>config mount
</span><span class='line'>  option target '/'
</span><span class='line'>  option uuid '413b964c-9c9c-4af4-8966-daf04ee53414'
</span><span class='line'>  option enabled '1'
</span><span class='line'>  option fstype 'ext4'
</span><span class='line'>
</span><span class='line'>config mount
</span><span class='line'>  option target '/home'
</span><span class='line'>  option uuid 'e7052ed0-b883-4375-9f31-5648ea8f2948'
</span><span class='line'>  option enabled '1'
</span><span class='line'>  option fstype 'ext4'
</span><span class='line'>
</span><span class='line'>config swap
</span><span class='line'>  option uuid '58713d02-e9de-4c23-a56b-a5ea3d3dfcf0'
</span><span class='line'>  option enabled '1'</span></code></pre></td></tr></table></div></figure>


<p>如果U盘只有一个分区，会只看到一个sda1(&ldquo;/&rdquo;)，其它诸如sda2(&ldquo;/home&rdquo;)、sda5(&ldquo;swap&rdquo;)需要额外分区才能看到。</p>

<h4>2.6 重启路由器，完成OpenWRT的扩展</h4>

<p>重启路由器，再次&#8221;df -h&#8221;一下，可以看到路由器的空间已经扩展成功了。
<img class="center" src="http://hutaow.github.io/images/articles/201309/install_openwrt_03_df.png" title="DF Info" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux中改变网卡的速度]]></title>
    <link href="http://hutaow.github.io/blog/2008/02/11/change-the-spped-of-network-adapter-under-linux/"/>
    <updated>2008-02-11T18:28:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2008/02/11/change-the-spped-of-network-adapter-under-linux</id>
    <content type="html"><![CDATA[<p>今天又用到家里的那根20几米的超长网线了，因为太长了，之前windows里用它联网的时候要把网卡速度降到10Mbps才能用。如果自动配置的话会默认用100Mbps的速度连接，但这样的话就会时断时连很不稳定。</p>

<p>我在Linux里试图在Network里直接配置速度，但没有找到，上网google发现需要手动修改，用到的工具是mii-tool。</p>

<p>用管理员权限执行如下命令</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mii-tool -A 10baseT-FD eth0</span></code></pre></td></tr></table></div></figure>


<p>eth0是网卡的名称，&#8221;10baseT-FD&#8221;是网卡的工作模式，如果要改回100Mbps的话这里填&#8221;100baseTx-FD&#8221;；</p>

<p>FD指的是Full Duplex全双工，也可以是HD即Half Duplex半双工。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决MPlayer中文字幕显示问题]]></title>
    <link href="http://hutaow.github.io/blog/2008/02/02/slove-mplayer-chinese-subtitles-problems/"/>
    <updated>2008-02-02T21:44:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2008/02/02/slove-mplayer-chinese-subtitles-problems</id>
    <content type="html"><![CDATA[<p>MPlayer在播放电影时，中文字幕往往不能正确显示，自己简单分析了一下，之所以中文显示出乱码是由于字符的编码选择不正确造成的。</p>

<p>在MPlayer的设置里有两个地方要对字符编码进行设置，一个是对显示字幕的编码进行设置，另一个是对字体文件的编码设置。</p>

<p>对于字幕的编码，就是要显示中文、英文、法文还是其它文字；而对于字体的编码，则是需要根据提供的字体文件严格选择对应的编码。明白了以上两点，再进行设置就不难了。</p>

<p>具体的设置过程如下：</p>

<ol>
<li><p>首先选择字幕编码，在MPlayer的设置中选择&#8221;Subtitle &amp; OSD&#8221;选项卡，在&#8221;Encoding&#8221;选单中选择&#8221;Simplified Chinese charset (CP936)&ldquo;。</p></li>
<li><p>接下来是字体编码，先要选择一个中文字体，&#8221;Font&#8221;选项卡中，在&#8221;Font&#8221;一栏选择一个中文字体(个人建议将自己的字体放在~/.fonts目录下，然后再到这个目录中选择相应的字体)。字体选择好后，在&#8221;Encoding&#8221;选单中选择&#8221;Unicode&#8221;，因为unicode是国际通用的字符编码标准，一般的字体编码都是unicode，所以此处要选择&#8221;Unicode&#8221;而不是&#8221;CP936&#8221;。</p></li>
<li><p>确定保存后重新播放中文字幕就可以正常显示了。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rhythmbox播放MP3和WMA所需要的解码器]]></title>
    <link href="http://hutaow.github.io/blog/2008/02/02/rhythmbox-play-mp3-and-wma-format-decoder-required/"/>
    <updated>2008-02-02T08:45:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2008/02/02/rhythmbox-play-mp3-and-wma-format-decoder-required</id>
    <content type="html"><![CDATA[<ul>
<li>如果想支持mp3，需要gstreamer-plugins-bad和gstreamer-plugins-ugly</li>
<li>如果想支持wma，需要gstreamer-ffmpeg</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Android做了一个计算器]]></title>
    <link href="http://hutaow.github.io/blog/2008/01/30/android-calculator/"/>
    <updated>2008-01-30T11:50:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2008/01/30/android-calculator</id>
    <content type="html"><![CDATA[<p>这两天一直在看xml，昨天简单的做了一个计算器，算是实地练习一下，熟悉一下Android的开发过程，不过有些小问题还没有顾及，还有就是界面可能稍显难看了一些。</p>

<p>运行时的截图：
<img class="center" src="http://hutaow.github.io/images/articles/200801/android_calculator.png" title="Android Calculator" ></p>

<p>源代码地址：<a href="https://github.com/hutaow/AndroidCalculator">点击这里</a></p>

<p>PS: 今天整理的时候发现一个问题，这个程序是我原来用Android SDK的m3版本生成编译的，现在SDK的最新版本是m5，结果在m5里竟然编译不通过。解决方法是可以重新创建一个项目，直接将源代码部分复制粘贴过去就可以了，新的项目仍然可以编译运行，我想应该是build.xml那个文件里的问题，版本、结构上google可能改了一些，不过不碍大事。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[对Android布局的理解]]></title>
    <link href="http://hutaow.github.io/blog/2008/01/28/understanding-on-the-android-layout/"/>
    <updated>2008-01-28T20:13:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2008/01/28/understanding-on-the-android-layout</id>
    <content type="html"><![CDATA[<p>前一段时间一直在考试，现在放假了，有时间好好的看了一下Android的布局。</p>

<p>之前对于XML的布局方法一直看着不爽，感觉很乱的样子，但时间长了我渐渐发现，这种程序代码与界面布局完全分开的方法非常顺手，该布局的地方都到main.xml里去写，甚至界面中显示的字符串都可以集中到string.xml文件中，而主程序的&#8221;.java&#8221;文件中则完全用于编写代码，思路非常清晰。</p>

<h3>1 首先按照程序的目录结构大致分析</h3>

<pre><code>res/layout/   这个目录存放的就是布局用的xml文件，一般默认为main.xml
res/values/   这个目录存放的是一堆常量的xml文件
res/drawable/ 存放的是一些图片什么的，当然图标也在这里
</code></pre>

<h3>2 下面主要对layout下的xml文件做个介绍，顺便也把布局的方法总结一下</h3>

<h4>2.1 文件的开头</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></code></pre></td></tr></table></div></figure>


<p>这是在说明xml版本及字符编码</p>

<h4>2.2 布局框架</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
</span><span class='line'>  android:layout_width="wrap_content"
</span><span class='line'>  android:layout_height="wrap_content"&gt;
</span><span class='line'>&lt;/LinearLayout&gt;</span></code></pre></td></tr></table></div></figure>


<p>其中开头的&#8221;LinearLayout&#8221;是布局的方式，可以有很多种，最常用的应该就是Linear了，其他的布局方法等下在后面总结。</p>

<p>接着android:layout_width(height)=&ldquo;wrap_content&#8221;是在设置这部分布局的宽高，也可以是绝对值，当然设置为绝对值时要标上单位。</p>

<h4>2.3 添加控件</h4>

<p>在&#8221;&lt;LinearLayout>&ldquo;和&rdquo;&lt;/LinearLayout>&ldquo;之间就可以添加控件了，比如要添加一个名字为btn的Button控件，并且Button上显示的文字是&#8221;Test!&#8221;，可以这样写：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Button id="@+id/btn" 
</span><span class='line'>  android:text="Test!"
</span><span class='line'>  android:layout_width="wrap_content"
</span><span class='line'>  android:layout_height="wrap_content"
</span><span class='line'>/&gt;</span></code></pre></td></tr></table></div></figure>


<p>开头id后面的就是控件名称，在用于添加事件Listener时会用到，而下几行的android:xxx就是设置控件的属性了，这些属性在Android的文档中都有，不需要特别去记，一般现查就可以了。</p>

<p><strong><em>有一点要说明的是，布局方法可以嵌套，有点像java中的Container，可以非常方便的把界面“堆”出来。</em></strong></p>

<p>布局方式的简单说明：
查了Android文档发现布局确实很多，只列出两个我自己认为较常用的：</p>

<ul>
<li>LinearLayout线性的布局方式，要么上下，要么左右的添加控件，很常用</li>
<li>GridView中文翻译过来是网格布局，控件按照顺序依次填到每个格子里就好了，出来的界面会很整齐</li>
</ul>


<p>其他的布局方式可以在需要时查文档，这里不再列出。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初学Android的一点问题]]></title>
    <link href="http://hutaow.github.io/blog/2008/01/11/android-beginner-question/"/>
    <updated>2008-01-11T11:33:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2008/01/11/android-beginner-question</id>
    <content type="html"><![CDATA[<p>前几天一直在看Android的文档，有些收获但同时还是有问题。</p>

<h4>1 问题：关于Android的Layout</h4>

<p>似乎和java有很大的不同，Android引入了XML，从google所给的例子来看，控件的布局方式都是写在XML文件里，而主程序中需要的只是add并且引用XML文件中的布局方式。</p>

<p>这种方法对我来说并不是很习惯，毕竟java用了那么长时间，在代码中直接setLayout感觉更舒服些。当然既然google采用了这种布局和代码分离的方式那就肯定有它的优点，看来还需要一点的时间来习惯这种布局方式。</p>

<h4>2 总结：我自己对Android几个模块的理解</h4>

<pre><code>Activity：类似java中的Applet或Frame，以我的理解，这个类提供了程序的最基本框架。
Intent Receiver：翻译过来是“目的接收器”，和java中的listener类似，用于处理事件。
Service：后台运行的服务，长贮内存中，个人认为这一块最可能出现安全问题。
Content Provider：主要用在数据存贮和交换，根据官方文档所说，不仅仅是存储数据，还可以是在不同程序、不同设备之间的数据交换。
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux中设置java环境变量]]></title>
    <link href="http://hutaow.github.io/blog/2007/09/22/config-java-environment-in-linux/"/>
    <updated>2007-09-22T13:38:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2007/09/22/config-java-environment-in-linux</id>
    <content type="html"><![CDATA[<p>从网上找资料，自己总结一下：</p>

<ol>
<li><p>从java.sun.com上下载jdk，解压到某个目录，比如&#8221;/usr/local/java/jdk1.x.x/&#8221;</p></li>
<li><p>修改~/.bashrc文件，在文件末尾加入以下几行：</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export JAVA_HOME=/usr/java/j2sdk1.x.x
</span><span class='line'>export PATH=$JAVA_HOME/bin:$PATH
</span><span class='line'>export CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:$CLASSPATH</span></code></pre></td></tr></table></div></figure>


<p>最后重启终端或执行source ~/.bashrc即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的VI配置文件]]></title>
    <link href="http://hutaow.github.io/blog/2007/08/19/my-vi-config/"/>
    <updated>2007-08-19T14:02:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2007/08/19/my-vi-config</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set nocompatible
</span><span class='line'>set history=1000
</span><span class='line'>filetype on
</span><span class='line'>set iskeyword+=_,$,@,%,#,-
</span><span class='line'>syntax on
</span><span class='line'>
</span><span class='line'>set ruler
</span><span class='line'>set shortmess=atI
</span><span class='line'>set noerrorbells
</span><span class='line'>
</span><span class='line'>set showmatch
</span><span class='line'>set incsearch
</span><span class='line'>
</span><span class='line'>set number
</span><span class='line'>set background=dark
</span><span class='line'>
</span><span class='line'>set autoindent
</span><span class='line'>set smartindent
</span><span class='line'>set tabstop=4
</span><span class='line'>set softtabstop=4
</span><span class='line'>set shiftwidth=4
</span><span class='line'>set expandtab</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
