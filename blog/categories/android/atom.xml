<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | Tony Wang]]></title>
  <link href="http://hutaow.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://hutaow.github.io/"/>
  <updated>2008-06-08T10:34:54+08:00</updated>
  <id>http://hutaow.github.io/</id>
  <author>
    <name><![CDATA[Wang Tao]]></name>
    <email><![CDATA[hutaow (at) hotmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android命令行下的编译和运行]]></title>
    <link href="http://hutaow.github.io/blog/2008/06/08/compile-android-project-on-command-line/"/>
    <updated>2008-06-08T10:17:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2008/06/08/compile-android-project-on-command-line</id>
    <content type="html"><![CDATA[<p>总结一下在命令行下android工程的创建、编译、运行和调试的方法。</p>

<h3>1 工程的创建</h3>

<p>在要存放工程的目录下用执行
<code>
activityCreator.py --out hutaow edu.bupt.hutaow.example"
</code></p>

<p>说明如下：</p>

<pre><code>activityCreator.py，创建工程的脚本文件，linux里使用"activityCreator.py"，如果是windows，则应当换成"activityCreator.bat" 
--out hutaow，其中hutaow是生成工程的输出目录，执行android工程的所有文件都会放在这个目录里 
edu.bupt.hutaow.example，这个是包的名称以及类的名称，其中最后一个字段是生成的类的名称，edu.bupt.hutaow是example类所在的包
</code></pre>

<p>命令执行后会在hutaow目录下生成工程的所有文件。</p>

<p>执行后终端输出如下：</p>

<p><code>
package: edu.bupt.hutaow
out_dir: hutaow
activity_name: example
Created directory hutaow/src/edu/bupt/hutaow
Added file hutaow/src/edu/bupt/hutaow/example.java
Created directory hutaow/bin
Created directory hutaow/res/values
Added file hutaow/res/values/strings.xml
Created directory hutaow/res/layout
Added file hutaow/res/layout/main.xml
Added file hutaow/AndroidManifest.xml
Added file hutaow/build.xml
</code></p>

<h3>2 工程的编译</h3>

<p>这里编译需要用到ant，ant是apache出的用于编译java工程文件的工具，android是基于java设计的，所以这里要用到它，ant可以在<a href="http://ant.apache.org">http://ant.apache.org</a>下载的到，具体安装过程和java、android差不多，都是解压出来后设置环境变量，可以参考linux中设置java环境变量。</p>

<p>使用ant编译直接在工程目录下执行简单的一条"ant"即可，不用任何参数，ant会根据build.xml文件中的描述自动进行相关的语法检查、依赖分析等等一些工作，最终将编译好的文件输出在工程的bin目录下</p>

<p>执行后终端输出如下：</p>

<p>```
Buildfile: build.xml</p>

<p>dirs:</p>

<pre><code>[mkdir] Created dir: /home/wangtao/Documents/android/hutaow/bin/classes
</code></pre>

<p>resource-src:</p>

<pre><code> [echo] Generating R.java...
</code></pre>

<p>aidl:</p>

<p>compile:</p>

<pre><code>[javac] Compiling 2 source files to /home/wangtao/Documents/android/hutaow/bin/classes
</code></pre>

<p>dex:</p>

<p>package-res:</p>

<p>package-res-no-assets:</p>

<pre><code> [echo] Packaging resources...
</code></pre>

<p>package-dex:</p>

<pre><code> [echo] Packaging dex...
</code></pre>

<p>package:</p>

<p>BUILD SUCCESSFUL
Total time: 6 seconds
```</p>

<h3>3 程序的运行及调试</h3>

<p>这里要用到的工具是android的调试工具adb，由它来完成程序的安装工作。 首先在命令行输入"emulator"启动android模拟器。</p>

<p>然后等模拟器完全启动好后，执行"adb install bin/example.apk"，即将example.apk安装到模拟器中。</p>

<p>最终在模拟器的"Applications"分类中找到"example"执行程序。</p>

<p>执行后终端输出如下：</p>

<p><code>
* daemon not running. starting it now *
33 KB/s (4170 bytes in 0.120s)
</code></p>
]]></content>
  </entry>
  
</feed>
