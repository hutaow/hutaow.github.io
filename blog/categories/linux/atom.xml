<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | 胡桃]]></title>
  <link href="http://hutaow.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://hutaow.github.io/"/>
  <updated>2013-09-23T00:23:20+08:00</updated>
  <id>http://hutaow.github.io/</id>
  <author>
    <name><![CDATA[Wang Tao]]></name>
    <email><![CDATA[hutaow@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux中分区出现“Read-only file system”的解决办法]]></title>
    <link href="http://hutaow.github.io/blog/2013/06/16/slove-the-read-only-file-system-problem-in-linux/"/>
    <updated>2013-06-16T22:54:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2013/06/16/slove-the-read-only-file-system-problem-in-linux</id>
    <content type="html"><![CDATA[<p>最近发现手机上TF卡权限显示是可写入的，但无法向TF卡写入文件，并提示“Read-only file system”，用下面的命令重新挂载一下就可以了：</p>

<p><code>
mount -o remount,rw /media/TF  
</code></p>

<p>注：其中”/media/TF“是挂载的目录。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux中批量设置目录或文件权限的方法]]></title>
    <link href="http://hutaow.github.io/blog/2013/06/16/batch-settings-directory-or-file-permissions/"/>
    <updated>2013-06-16T01:48:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2013/06/16/batch-settings-directory-or-file-permissions</id>
    <content type="html"><![CDATA[<p>递归方式将当前目录下所有的子目录设置为755权限（不包括文件）</p>

<p><code>
find ./ -type d -exec chmod 755 {} \;
</code></p>

<p>递归方式将当前目录下的所有文件设置为644权限（包括子目录下的文件，但不对目录本身设置权限）</p>

<p><code>
find ./ -type f -exec chmod 644 {} \;
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[终端下使用代理的方法]]></title>
    <link href="http://hutaow.github.io/blog/2008/08/10/config-proxy-in-linux-terminal/"/>
    <updated>2008-08-10T15:12:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2008/08/10/config-proxy-in-linux-terminal</id>
    <content type="html"><![CDATA[<p>很长时间都不知道怎么设置，今天突然发现，设置四个环境变量就行了，"HTTP_PROXY"、"http_proxy"和"FTP_PROXY"、"ftp_proxy"，在"~/.bash_profile"中添加以下几行：</p>

<p><code>
export HTTP_PROXY=http://username:password@proxy.server:8080
export FTP_PROXY=http://username:password@proxy.server:8080
export http_proxy=http://username:password@proxy.server:8080
export ftp_proxy=http://username:password@proxy.server:8080
</code></p>

<p>其中，username和password是用户名和密码，用在需要验证的代理服务器上；proxy.server是代理服务器的地址，后面的8080是端口号。</p>

<p>修改保存后重启终端或在执行"source ~/.bash_proxy"生效。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora 9 无法启动KDE的解决办法]]></title>
    <link href="http://hutaow.github.io/blog/2008/07/29/slove-the-problem-that-kde-can-not-start-in-fedora-9/"/>
    <updated>2008-07-29T11:34:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2008/07/29/slove-the-problem-that-kde-can-not-start-in-fedora-9</id>
    <content type="html"><![CDATA[<p>今天突然想再尝试一下KDE的环境，而且传说中的KDE4出了那么久，还一直没有用过，于是兴致勃勃的安装上了KDE的桌面环境。Logout->KDE，结果却报出个错误，说"Could not start kstartupconfig4. Check your installation"，无语，难道是我少装了什么东西？</p>

<p>按照它说的检查，结果没问题啊，kstartupconfig4已经安装好了，于是又上网查，google出好多解决办法，不过基本上都是用"chown"改变"~/.kde"目录的所有者，哦？检查……"~/.kde"这个目录竟然是root的，原来是权限的问题。</p>

<!-- more -->


<p>输入"chown -R owner ~/.kde"，为了保险，再加个"chgrp -R group ~/.kde"，这里面的"owner"和"group"分别是当前的用户名和用户所在的组名。</p>

<p>之后重新进入KDE，一切正常！</p>

<p>PS：新的KDE环境确实做的不错，桌面右上角的widget加上suse的主菜单非常赞</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux下将.cue/.bin转换为.iso的方法]]></title>
    <link href="http://hutaow.github.io/blog/2008/07/19/convert-cue-and-bin-to-iso-format-in-linux/"/>
    <updated>2008-07-19T17:20:00+08:00</updated>
    <id>http://hutaow.github.io/blog/2008/07/19/convert-cue-and-bin-to-iso-format-in-linux</id>
    <content type="html"><![CDATA[<p>从学校的FTP上下了个Windows 2000 Advance Server光盘镜像，打算装在虚拟机里，结果发现下下来的镜像是.cue/.bin格式的，VirtualBox还用不了，于是跑google上搜了一大堆linux里转换.iso格式的软件，发现一个叫"bchunk"的小软件非常好用，而且小的可以，才几十K，很不错。</p>

<p>在终端里输入如下命令：</p>

<p><code>
bchunk e-w2sp4ru1as.bin e-w2sp4ru1as.cue e-w2sp4ru1as.iso
</code></p>

<!-- more -->


<p>其中，e-w2sp4ru1as.e-w2sp4ru1as.cue是原来的镜像名，e-w2sp4ru1as.iso是转换后想要保存的文件名。</p>

<p>等一小会儿，就像下面这幅图一样，会有一个进度条，进度到100%后转换就完成了。
<img class="center" src="/images/articles/200807/convert_cue_and_bin_to_iso_format_in_linux.png" title="Convert CUE and BIN to ISO format" ></p>
]]></content>
  </entry>
  
</feed>
